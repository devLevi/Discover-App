
/* This is necessary to avoid full-page views from not having bugs */
html, body {
  margin: 0;
  padding: 0;
  font-family: sans-serif;
  height: 100%;
}

p {
  font-size: 16px;
}

.nav {
  position: fixed;
  height: 50px;
  width: 100%;
  padding-left: 10px;
  line-height: 50px;
  background-color: darkgreen;
  color: white;
}
/* The subsequent height: 100% must be inherited constantly for the full page sized views to work. Padding top is there to avoid getting covered by the position:fixed navbar, and overflow:hidden is so that the user can't scroll and see the second view which is hidden. */
.view-area {
  height: 100%;
  padding-top: 50px;
  overflow: hidden;
}

/* width: 200vw uses vw as measurement (vw = viewport width). In short, 100vw
means 100% of the current browser width. Meaning we want this to measure 2x the
browser width. font-size: 0 is a CSS hack necessary for this layout that
doesn't use float. Transition is so that we get a nice animation on changing the
left property */
.panels {
  position: relative;
  width: 200vw;
  height: 100%;
  font-size: 0;
  left: 0;
  transition: 0.5s left;
}

/* When you apply the active class, the entire panels will move 100% of browser
width to the left */
.panels.active {
  left: -100vw;
}

/* Setting overflow: scroll is what allows the user to scroll within the
sub-view. And using width: 100vw means we have 2 panels fit within the 200vw
parent container */
.panel {
  display: inline-block;
  width: 50%;
  height: 100%;
  font-size: 12px;
  padding: 12px;
  border: 5px solid green;
  overflow: scroll;
}
